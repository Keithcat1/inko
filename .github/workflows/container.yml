---
name: Build CI container
on:
  workflow_call:
    inputs:
      name:
        description: 'The name of the image to build'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  NAMESPACE: inko-lang/ci

jobs:
  build:
    name: ${{ inputs.name }}-${{ matrix.target.arch }} build
    strategy:
      matrix:
        target:
          - arch: amd64
            runner: ubuntu-24.04
          - arch: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.target.runner }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - name: Build imaage
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ci/docker/${{ inputs.name }}
          platforms: linux/${{ matrix.target.arch }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}:${{ inputs.name }}
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.NAMESPACE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ inputs.name }}-${{ matrix.target.arch }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-24.04
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ inputs.name }}-*
          merge-multiple: true
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}
      - name: Create and push manifest
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY }}/${{ env.NAMESPACE }}@sha256:%s ' *)
