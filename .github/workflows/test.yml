---
name: Tests

on:
  push:
    branches:
      - '**'
    paths:
      - '.cargo/**'
      - '.github/**'
      - 'ast/**'
      - 'compiler/**'
      - 'inko/**'
      - 'ipm/**'
      - 'libstd/**'
      - 'types/**'
      - 'vm/**'
      - 'Cargo.*'
      - '*.toml'
      - 'Makefile'
      - Dockerfile
  workflow_dispatch:

env:
  CARGO_HOME: ${{ github.workspace }}/.cargo

jobs:
  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: EmbarkStudios/cargo-deny-action@v1

  # Clippy uses a specific version as its lints change over time, which could
  # result in random unrelated CI failures. We'll bump this version every now
  # and then when needed.
  cargo-clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@1.62
        with:
          components: 'clippy'
      - uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.cargo
            target
          key: ${{ runner.os }}-alpine
      - run: 'cargo clippy -- -D warnings'

  cargo-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: 'rustfmt'
      - uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.cargo
            target
          key: ${{ runner.os }}-alpine
      - run: 'cargo fmt --all --check'

  gitlint:
    runs-on: ubuntu-latest
    container:
      image: 'ghcr.io/inko-lang/containers:python'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 10
      - run: git config --global --add safe.directory $PWD
      - run: gitlint --commits "HEAD~9..HEAD"

  compiler:
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        version:
          - '1.62'
          - stable
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.version }}
      - uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.cargo
            target
          key: ${{ runner.os }}-stable
      - name: Running tests
        run: cargo test

  std:
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    needs:
      - compiler
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@1.62
      - uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.cargo
            target
          key: ${{ runner.os }}-stable
      - name: Compiling
        run: cargo build --release
      - name: Running tests
        run: |
          cd libstd
          cargo run --release -p inko -- test

  nightly-container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - std
    if: |
      github.repository == 'inko-lang/inko' && github.ref_name == 'main'
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
