---
name: Test
on:
  workflow_call:

env:
  # This directory must be named differently from `.cargo`, otherwise it will
  # conflict with our local Cargo configuration.
  CARGO_HOME: ${{ github.workspace }}/.cargo-home

jobs:
  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: EmbarkStudios/cargo-deny-action@v1

  gitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 10
      - run: pip install gitlint
      - run: git config --global --add safe.directory $PWD
      - run: gitlint --commits "HEAD~9..HEAD"

  # Clippy uses a specific version as its lints change over time, which could
  # result in random unrelated CI failures. We'll bump this version every now
  # and then when needed.
  cargo-clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@1.63
        with:
          components: 'clippy'
      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.CARGO_HOME }}
            target
          key: ${{ runner.os }}
      - name: Install LLVM
        run: bash scripts/llvm.sh
      - run: 'cargo clippy -- -D warnings'

  cargo-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: 'rustfmt'
      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.CARGO_HOME }}
            target
          key: ${{ runner.os }}
      - run: 'cargo fmt --all --check'

  compiler:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        version:
          - '1.63'
          - stable
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.version }}
      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.CARGO_HOME }}
            target
          key: ${{ runner.os }}-stable
      - name: Install LLVM
        run: bash scripts/llvm.sh
      - name: Running tests
        run: cargo test

  std:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    needs:
      - compiler
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@1.63
      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.CARGO_HOME }}
            target
          key: ${{ runner.os }}-stable
      - name: Install LLVM
        run: bash scripts/llvm.sh
      - name: Compiling
        run: cargo build --release
      - name: Running tests
        run: |
          cd std
          ../target/release/inko test
