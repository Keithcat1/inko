---
name: Push

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CARGO_HOME: ${{ github.workspace }}/.cargo-home
  RUSTUP_HOME: ${{ github.workspace }}/.rustup-home

jobs:
  changes:
    name: 'Detect changes'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: git config --global --add safe.directory $PWD
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            docs:
              - '.github/**'
              - 'ci/**'
              - 'docs/**'
              - Makefile
            std:
              - '**/*.inko'
              - '**/*.rs'
              - 'ci/**'
              - Makefile
            ci:
              - '.github/**'
              - 'ci/**'
            container:
              - '**/*.inko'
              - '**/*.rs'
              - '.github/**'
              - Dockerfile
    outputs:
      docs: ${{ steps.changes.outputs.docs }}
      std: ${{ steps.changes.outputs.std }}
      ci: ${{ steps.changes.outputs.ci }}
      container: ${{ steps.changes.outputs.container }}

  ci-containers:
    name: CI containers
    uses: ./.github/workflows/containers.yml
    needs:
      - changes
    if: needs.changes.outputs.ci == 'true'
    permissions:
      contents: read
      packages: write

  tests:
    name: Tests
    uses: ./.github/workflows/tests.yml
    needs:
      - ci-containers

  nightly-container:
    name: Nightly container
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - changes
      - tests
    if: github.ref_name == 'main' && needs.changes.outputs.container == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/inko-lang/inko:latest
    env:
      RCLONE_S3_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
      RCLONE_S3_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}
      RCLONE_S3_ENDPOINT: https://${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.r2.cloudflarestorage.com
    needs:
      - changes
      - tests
    if: github.ref_name == 'main' && needs.changes.outputs.docs
    steps:
      - name: Install dependencies
        run: microdnf install --quiet --assumeyes rclone git tar make
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            docs/build
            ~/.local/share/inko/packages
          key: docs-main
      - run: git config --global --add safe.directory $PWD
      - name: Deploy the documentation
        run: make docs/publish

  std-docs:
    name: Standard library documentation
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/inko-lang/ci:fedora
    env:
      RCLONE_S3_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
      RCLONE_S3_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}
      RCLONE_S3_ENDPOINT: https://${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.r2.cloudflarestorage.com
    needs:
      - changes
      - tests
    if: |
      github.ref_name == 'main' && needs.changes.outputs.std
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ${{ env.CARGO_HOME }}
            ${{ env.RUSTUP_HOME }}
            target
          key: std-docs-main
      - run: git config --global --add safe.directory $PWD
      - name: Deploy the documentation
        run: make std-docs/publish
