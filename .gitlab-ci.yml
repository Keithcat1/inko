---

variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  DEBIAN_FRONTEND: noninteractive
  AWS_REGION: eu-west-1

stages:
  - test
  - build
  - test-runtime
  - release
  - post-release

test:compiler:linux:
  image: ruby:2.4-alpine
  stage: test
  before_script:
    - cd compiler
    - apk add --update build-base
    - gem install bundler --no-ri --no-rdoc
    - ruby --version
    - gem --version
    - bundle --version
    - bundle install --path vendor --retry=3
  script:
    - make test
  cache:
    paths:
      - compiler/vendor

test:compiler:macos:
  stage: test
  tags:
    - macos
  before_script:
    - cd compiler
    - ruby --version
    - gem --version
    - bundle --version
    - bundle install --path vendor --retry=3
  script:
    - gmake test
  cache:
    key: macos
    paths:
      - compiler/vendor

test:ivm-nightly:linux:
  image: rustlang/rust:nightly
  stage: test
  before_script:
    - cd vm
    - rustc --version
    - cargo --version
  script:
    - make test
  cache:
    paths:
      - .cargo

test:ivm-stable:linux:
  image: alpine:edge
  stage: test
  before_script:
    - apk add --update rust cargo build-base coreutils
    - cd vm
    - rustc --version
    - cargo --version
  script:
    - make test
  cache:
    paths:
      - .cargo

test:ivm-nightly:macos:
  stage: test
  tags:
    - macos
  before_script:
    - cd vm
    - rustc --version
    - cargo --version
  script:
    - rustup run nightly gmake test
  cache:
    key: macos
    paths:
      - .cargo

test:ivm-stable:macos:
  stage: test
  tags:
    - macos
  before_script:
    - cd vm
    - rustc --version
    - cargo --version
  script:
    - gmake test
  cache:
    key: macos
    paths:
      - .cargo

lint:clippy:
  image: rust:latest
  stage: test
  before_script:
    - rustup component add clippy-preview
    - cd vm
    - rustc --version
    - cargo --version
  script:
    - make clippy
  cache:
    paths:
      - .cargo

lint:rustfmt:
  image: rustlang/rust:nightly
  stage: test
  before_script:
    - rustup component add rustfmt-preview --toolchain=nightly
    - cd vm
    - rustc --version
    - cargo --version
    - rustfmt --version
  script:
    - make rustfmt-check
  cache:
    paths:
      - .cargo

lint:versions:
  image: alpine:latest
  stage: test
  before_script:
    - apk add --update coreutils bash grep
  script:
    - bash scripts/versions.sh

build:ivm:linux:
  image: rust:latest
  stage: build
  before_script:
    - cd vm
    - rustc --version
    - cargo --version
    - rustup target add x86_64-unknown-linux-musl
  script:
    - make release ARCH=x86_64-linux-musl TARGET=x86_64-unknown-linux-musl
    - mv target/x86_64-unknown-linux-musl/release/ivm ../ivm
    - strip ../ivm
  cache:
    paths:
      - .cargo
  artifacts:
    expire_in: 1 hour
    paths:
      - ivm

build:ivm:macos:
  stage: build
  tags:
    - macos
  before_script:
    - cd vm
    - rustc --version
    - cargo --version
  script:
    - gmake release
    - mv target/release/ivm ../ivm
    - strip ../ivm
  cache:
    key: macos
    paths:
      - .cargo
  artifacts:
    expire_in: 1 hour
    paths:
      - ivm

test:runtime:linux:
  image: ruby:2.4-slim
  stage: test-runtime
  before_script:
    - apt-get update -q
    - apt-get install -y -q build-essential
    - ruby --version
    - ./ivm --version
    - ./ivm --features
  script:
    - env RUBYLIB=./compiler/lib ./compiler/bin/inko-test -d runtime --vm ./ivm
  dependencies:
    - build:ivm:linux

test:runtime:macos:
  stage: test-runtime
  tags:
    - macos
  before_script:
    - ruby --version
    - ./ivm --version
    - ./ivm --features
  script:
    - env RUBYLIB=./compiler/lib ./compiler/bin/inko-test -d runtime --vm ./ivm
  dependencies:
    - build:ivm:macos

release:source:
  image: alpine:edge
  stage: release
  before_script:
    - echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories
    - apk add --update coreutils build-base aws-cli git bash
  script:
    - make release-source
  only:
    - tags

release:compiled:linux-gnu:
  image: rust:latest
  stage: release
  before_script:
    - apt-get update -q
    - apt-get install -y -q build-essential python-pip ruby-full git bash
    - pip install awscli
    - ruby --version
    - rustc --version
    - cargo --version
    - aws --version
  script:
    - make release-compiled
  only:
    - tags
  cache:
    paths:
      - .cargo

release:compiled:linux-musl:
  image: rust:latest
  stage: release
  before_script:
    - apt-get update -q
    - apt-get install -y -q build-essential python-pip ruby-full git bash
    - pip install awscli
    - ruby --version
    - rustc --version
    - cargo --version
    - aws --version
    - rustup target add x86_64-unknown-linux-musl
  script:
    - make release-compiled
  only:
    - tags
  cache:
    paths:
      - .cargo

release:compiled:macos:
  stage: release
  tags:
    - macos
  before_script:
    - apt-get install -y -q build-essential python-pip ruby-full git bash
    - pip install awscli
    - ruby --version
    - rustc --version
    - cargo --version
    - aws --version
  script:
    - gmake release-compiled SHA256SUM=gsha256sum
  only:
    - tags
  cache:
    key: macos
    paths:
      - .cargo

post-release:manifest:
  image: alpine:latest
  stage: post-release
  before_script:
    - echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories
    - apk add --update coreutils build-base aws-cli grep
  script:
    - make rebuild-manifest
  only:
    - tags
