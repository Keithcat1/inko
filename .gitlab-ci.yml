---

variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  DEBIAN_FRONTEND: noninteractive
  AWS_REGION: eu-west-1

stages:
  - test
  - build
  - test-runtime
  - release
  - post-release

test:compiler:
  image: ruby:2.4-alpine
  stage: test
  before_script:
    - cd compiler
    - apk add --update build-base
    - gem install bundler --no-ri --no-rdoc
    - ruby --version
    - gem --version
    - bundle --version
    - bundle install --path vendor --retry=3
  script:
    - make test
  cache:
    paths:
      - compiler/vendor

test:ivm:
  image: rustlang/rust:nightly
  stage: test
  before_script:
    - cd vm
    - rustc --version
    - cargo --version
  script:
    - make test
  cache:
    paths:
      - .cargo

build:ivm:
  image: rustlang/rust:nightly
  stage: build
  before_script:
    - cd vm
    - rustc --version
    - cargo --version
  script:
    - make release
    - strip target/release/ivm
  cache:
    paths:
      - .cargo
  artifacts:
    expire_in: 1 hour
    paths:
      - vm/target/release/ivm

test:runtime:
  image: ruby:2.4-slim
  stage: test-runtime
  before_script:
    - apt-get update -q
    - apt-get install -y -q build-essential
    - gem install bundler --no-ri --no-rdoc
    - ruby --version
    - vm/target/release/ivm --version
    - bundle --version
    - cd compiler
    - bundle install --path vendor --retry=3
  script:
    - bundle exec ./bin/inko-test -d ../runtime --vm ../vm/target/release/ivm
  cache:
    paths:
      - compiler/vendor
  dependencies:
    - build:ivm

release:source:
  image: alpine:latest
  stage: release
  before_script:
    - echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories
    - apk add --update coreutils build-base aws-cli git bash
  script:
    - make release-source
  only:
    - tags

release:compiled:
  image: rustlang/rust:nightly
  stage: release
  before_script:
    - apt-get update -q
    - apt-get install -y -q build-essential python-pip ruby-full git bash
    - pip install awscli
    - ruby --version
    - rustc --version
    - cargo --version
    - aws --version
  script:
    - make release-compiled
  only:
    - tags
  cache:
    paths:
      - .cargo

post-release:manifest:
  image: alpine:latest
  stage: post-release
  before_script:
    - echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories
    - apk add --update coreutils build-base aws-cli
  script:
    - make rebuild-manifest
  only:
    - tags
