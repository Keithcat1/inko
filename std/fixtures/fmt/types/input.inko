type A {
  let @b: Int
}

type pub B {
  let @b: Int
}

type async C {
  let @b: Int
}

type pub async D {
  let @b: Int
}

type builtin E {
  let @b: Int
}

type enum F {
  case A(Int)
}

type pub enum G {
  case A(Int)
}

type extern H {
  let @a: Int
}

type pub extern I {
  let @a: Int
}

type copy J {
  let @a: Int
}

type pub copy K {
  let @a: Int
}

type L {
  let @a: Int
}

type pub M {
  let @a: Int
}

type inline N {
  let @a: Int
}

type inline enum O {
  case A
}
