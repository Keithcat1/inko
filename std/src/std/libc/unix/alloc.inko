fn extern realloc(pointer: Pointer[UInt8], size: Int) -> Pointer[UInt8]
fn extern memmove(
  to: Pointer[UInt8],
  from: Pointer[UInt8],
  size: Int,
) -> Pointer[UInt8]

fn pub extern free(pointer: Pointer[UInt8])

fn pub resize(buffer: Pointer[UInt8], size: Int) -> Pointer[UInt8] {
  let ptr = realloc(buffer, size)

  # In this case there's nothing we can do but abort.
  if ptr as Int == 0 and size != 0 {
    panic('std.libc.unix.alloc.resize() failed to allocate memory')
  }

  ptr
}

fn pub copy(from: Pointer[UInt8], to: Pointer[UInt8], size: Int) {
  memmove(to, from, size)
}
