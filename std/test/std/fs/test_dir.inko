import std.env
import std.fs.dir
import std.test.Tests

fn pub tests(t: mut Tests) {
  t.test('dir.create') fn (t) {
    let path = env.temporary_directory.join("inko-test-dir-{t.id}")

    t.true(dir.create(path).ok?)
    t.true(path.directory?)
    t.true(dir.create(path).error?)

    dir.remove(path).unwrap
  }

  t.test('dir.create_all') fn (t) {
    let root = env.temporary_directory.join("inko-test-dir-{t.id}")
    let path = root.join('foo').join('bar')

    t.true(dir.create_all(path).ok?)
    t.true(path.directory?)
    t.true(dir.create_all(path).ok?)

    dir.remove_all(root).unwrap
  }

  t.test('dir.remove') fn (t) {
    let path = env.temporary_directory.join("inko-test-dir-{t.id}")

    dir.create(path).unwrap

    t.true(dir.remove(path).ok?)
    t.true(dir.remove(path).error?)
    t.false(path.directory?)
  }

  t.test('dir.remove_all') fn (t) {
    let root = env.temporary_directory.join("inko-test-dir-{t.id}")
    let path = root.join('foo').join('bar')

    dir.create_all(path).unwrap

    t.true(dir.remove_all(root).ok?)
    t.true(dir.remove_all(root).error?)
    t.false(root.directory?)
  }
}
