# Importing of both the prelude and the bootstrap modules will not yet work at
# this point, hence these are disabled.
![import_prelude: false]
![import_bootstrap: false]

# Implicit module definitions will not yet work since we haven't defined the
# required objects just yet.
#
# As a result of this setting all constants and methods defined in this module
# are defined directly on the top-level object.
![define_module: false]

var True = _INKOC.get_true
var False = _INKOC.get_false

# Object will act as the prototype for all objects.
#
# We need to define Object here instead of in a separate module as all other
# objects depend on it being present.
object Object {
  def new -> Self {
    let obj = _INKOC.set_object(False, self)

    obj.init

    obj
  }

  def init {}

  def object_name {
    @object_name
  }

  def implement_trait(thing) {}
}

object Trait {}

# Inko::Modules contains all of the imported modules mapped to their fully
# qualified module names.
object Modules {}

# Inkoc::Module will act as the prototype for all modules. We'll later refine
# this object in the std::module module, but we need it here to allow us to
# define new modules in the first place.
object Module {}
