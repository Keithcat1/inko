# The prelude module imports various modules of which the contents should be
# available to every other module. Any globals that should be exposed to every
# module must be defined in std::globals instead.

![import_prelude: false]

# The order in which modules are imported is important as some modules may
# depend on types / methods defined in other modules.

# The very first module we have to import is std::basic_object. This module
# defines a few methods that _must_ exist before we can import any other
# methods.
import std::basic_object

# The std::boolean module must be imported next since many other modules depend
# on the methods it defines. This module also refines the "Boolean" trait
# defined earlier in std::bootstrap.
import std::boolean

# Next up we import std::object. We do this before all other modules because
# similar to std::boolean the other modules depend on various methods defined in
# std::object.
import std::object

# Now that most of the crucial bits and pieces are in place we can start
# importing other modules. At this point the order of the imports doesn't matter
# much any more.
import std::integer
import std::float
import std::nil
import std::block
import std::string
import std::array
import std::array_iter
import std::hash_map::(HashMap as _HashMap)

# These constants are re-exported so they're available to all modules by
# default. Core types such as String should be exposed in std::globals instead.
let HashMap = _HashMap
