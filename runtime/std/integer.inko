#! The integer type.

import std::conversion::(ToInteger, ToString, ToFloat)
import std::operators::*

impl ToInteger for Integer {
  def to_integer -> Integer {
    self
  }
}

impl ToFloat for Integer {
  def to_float -> Float {
    _INKOC.integer_to_float(self)
  }
}

impl ToString for Integer {
  def to_string -> String {
    _INKOC.integer_to_string(self)
  }
}

impl Add!(Self) for Integer {
  def +(other: Self) -> Self {
    _INKOC.integer_add(self, other)
  }
}

impl Divide for Integer {
  def /(other: Self) -> Self {
    _INKOC.integer_div(self, other)
  }
}

impl Multiply for Integer {
  def *(other: Self) -> Self {
    _INKOC.integer_mul(self, other)
  }
}

impl Subtract!(Self) for Integer {
  def -(other: Self) -> Self {
    _INKOC.integer_sub(self, other)
  }
}

impl Modulo for Integer {
  def %(other: Self) -> Self {
    _INKOC.integer_mod(self, other)
  }
}

impl Smaller for Integer {
  def <(other: Self) -> Boolean {
    _INKOC.integer_smaller(self, other)
  }
}

impl Greater for Integer {
  def >(other: Self) -> Boolean {
    _INKOC.integer_greater(self, other)
  }
}

impl Equal for Integer {
  def ==(other: Self) -> Boolean {
    _INKOC.integer_equals(self, other)
  }
}

impl GreaterOrEqual for Integer {
  def >=(other: Self) -> Boolean {
    _INKOC.integer_greater_or_equal(self, other)
  }
}

impl SmallerOrEqual for Integer {
  def <=(other: Self) -> Boolean {
    _INKOC.integer_smaller_or_equal(self, other)
  }
}

impl BitwiseAnd for Integer {
  def &(other: Self) -> Self {
    _INKOC.integer_bitwise_and(self, other)
  }
}

impl BitwiseOr for Integer {
  def |(other: Self) -> Self {
    _INKOC.integer_bitwise_or(self, other)
  }
}

impl BitwiseXor for Integer {
  def ^(other: Self) -> Self {
    _INKOC.integer_bitwise_xor(self, other)
  }
}

impl ShiftLeft for Integer {
  def <<(other: Self) -> Self {
    _INKOC.integer_shift_left(self, other)
  }
}

impl ShiftRight for Integer {
  def >>(other: Self) -> Self {
    _INKOC.integer_shift_right(self, other)
  }
}
