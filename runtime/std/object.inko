import std::conditional::Conditional
import std::operators::Equal

impl Object {
  def implement_trait(trait_to_implement) {}
}

impl Conditional for Object {
  def if_true!(R)(block: do -> R) -> ?R {
    block.call
  }

  def if_false!(R)(block: do -> R) -> ?R {
    Nil
  }

  def if!(R)(true: do -> R, false: do -> R) -> ?R {
    true.call
  }
}

impl Equal for Object {
  def ==(other: Self) -> Boolean {
    _INKOC.object_equals(self, other)
  }
}
