# Boolean true and false.
#
# In Inko boolean true is the object `True` and boolean false is the object
# `False`. Both are regular objects that are instances of the `Boolean` object.
import std::conditional::Conditional
import std::conversion::ToString

impl Boolean {
  # Returns `True` if `self` is also `True`.
  def true? -> Boolean {
    _INKOC.if(self, True, False)
  }

  # Returns `True` if `self` is `False`.
  def false? -> Boolean {
    _INKOC.if(self, False, True)
  }
}

impl Conditional for Boolean {
  def if!(R)(true: do -> R, false: do -> R) -> R {
    _INKOC.if(self, true, false).call
  }

  def if_true!(R)(block: do -> R) -> ?R {
    _INKOC.if(self, block.call, Nil)
  }

  def if_false!(R)(block: do -> R) -> ?R {
    _INKOC.if(self, Nil, block.call)
  }

  def and(other: do -> Boolean) -> Boolean {
    _INKOC.if(self, other.call, False)
  }

  def or(other: do -> Boolean) -> Boolean {
    _INKOC.if(self, True, other.call)
  }
}

impl ToString for Boolean {
  def to_string -> String {
    _INKOC.if(self, 'True', 'False')
  }
}
