#! Module for retrieving operating system related information.

## Returns a `String` describing the current platform.
##
## The following values may currently be returned:
##
## * `'android'`
## * `'bitrig'`
## * `'dragonfly'`
## * `'freebsd'`
## * `'ios'`
## * `'linux'`
## * `'macos'`
## * `'netbsd'`
## * `'openbsd'`
## * `'unix'`
## * `'unknown'`
## * `'windows'`
##
## The value `'unknown'` will be returned if the platform is not recognised.
## `'unix'` might be returned for an unrecognised Unix (like) platform.
##
## # Examples
##
## Getting the platform a program is running on:
##
##     import std::os
##
##     os.platform # => 'linux'
def platform -> String {
  _INKOC.platform
}

## Returns `True` if the program is currently running on Windows.
def windows? -> Boolean {
  platform == 'windows'
}

## The newline separator to use on the current platform.
let NEWLINE = windows?.if true: {
  "\r\n"
}, false: {
  "\n"
}
