# Detection of Inko keywords using perfect hashing.
#
# The code in this module was originally generated using gperf using the
# following command:
#
#     gperf -m100 keywords.txt
#
# Here `keywords.txt` contains a sorted list of all the keywords of Inko. The
# generated C code was then ported to Inko by hand.
#
# Since this code is based on generated code, changing it may produce
# unexpected results. For example, the various lookup tables in this module
# should not have their order changed.

# The associated values for the first and second bytes in a keyword.
let ASSOCIATED_VALUES = Array.new(
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24,  0, 14, 24,
  13,  0, 16, 24, 12,  3, 24, 24,  6,  6,
  24,  3, 24, 24,  0,  0,  2, 12, 24,  4,
  24,  9, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24
)

# All available keywords, as ByteArray instances.
let WORD_LIST = Array.new(
  ''.to_byte_array,
  ''.to_byte_array,
  'as'.to_byte_array,
  ''.to_byte_array,
  'self'.to_byte_array,
  'try'.to_byte_array,
  'return'.to_byte_array,
  'trait'.to_byte_array,
  'static'.to_byte_array,
  'let'.to_byte_array,
  'else'.to_byte_array,
  'match'.to_byte_array,
  'lambda'.to_byte_array,
  'impl'.to_byte_array,
  'local'.to_byte_array,
  'import'.to_byte_array,
  'def'.to_byte_array,
  'yield'.to_byte_array,
  'do'.to_byte_array,
  'throw'.to_byte_array,
  'when'.to_byte_array,
  'mut'.to_byte_array,
  'for'.to_byte_array,
  'object'.to_byte_array
)

# Input values with a length outside of this `Range` definitely can not be a
# keyword.
let WORD_LENGTH = 2..6

# The maximum possible hash value. If a hash value is greater, the input is
# definitely not a keyword.
let MAX_HASH_VALUE = 23

# Returns `True` if the given `ByteArray` is a valid Inko keyword.
def keyword?(bytes: ByteArray) -> Boolean {
  let length = bytes.length

  WORD_LENGTH.cover?(length).if_false { return False }

  let hash =
    length + ASSOCIATED_VALUES[bytes[1]] + ASSOCIATED_VALUES[bytes[0]]

  (hash > MAX_HASH_VALUE).if_true { return False }

  WORD_LIST[hash] == bytes
}
