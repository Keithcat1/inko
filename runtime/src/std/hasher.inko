#! Hashers for various data types.
import std::hash::Hasher

## The default `Hasher` used for various data types, such as `HashMap`.
##
## Different instances of a `DefaultHasher` may produce different hash values
## for the same object. The internal hashing algorithm may also change, and so
## the exact hash values should not be relied upon.
##
## Internally this hasher uses the hashing instructions provided by IVM, which
## currently uses SipHash 1-3.
let DefaultHasher = _INKOC.get_hasher_prototype

_INKOC.set_object_name(DefaultHasher, 'DefaultHasher')

impl DefaultHasher {
  ## Returns a new `DefaultHasher`.
  def new -> Self {
    _INKOC.hasher_new
  }
}

impl Hasher for DefaultHasher {
  def write_integer(value: Integer) {
    _INKOC.hasher_write(self, value)
  }

  def write_float(value: Float) {
    _INKOC.hasher_write(self, value)
  }

  def finish -> Integer {
    _INKOC.hasher_finish(self)
  }
}
