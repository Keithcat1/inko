#[repr(u8)]
pub enum InstructionType {
    SetLiteral,
    SetObject,
    SetArray,
    GetIntegerPrototype,
    GetFloatPrototype,
    GetStringPrototype,
    GetArrayPrototype,
    GetBooleanPrototype,
    GetBlockPrototype,
    GetTrue,
    GetFalse,
    SetLocal,
    GetLocal,
    SetBlock,
    Return,
    GotoIfFalse,
    GotoIfTrue,
    Goto,
    RunBlock,
    IntegerAdd,
    IntegerDiv,
    IntegerMul,
    IntegerSub,
    IntegerMod,
    IntegerToFloat,
    IntegerToString,
    IntegerBitwiseAnd,
    IntegerBitwiseOr,
    IntegerBitwiseXor,
    IntegerShiftLeft,
    IntegerShiftRight,
    IntegerSmaller,
    IntegerGreater,
    IntegerEquals,
    FloatAdd,
    FloatMul,
    FloatDiv,
    FloatSub,
    FloatMod,
    FloatToInteger,
    FloatToString,
    FloatSmaller,
    FloatGreater,
    FloatEquals,
    ArrayInsert,
    ArrayAt,
    ArrayRemove,
    ArrayLength,
    ArrayClear,
    StringToLower,
    StringToUpper,
    StringEquals,
    StringToBytes,
    StringFromBytes,
    StringLength,
    StringSize,
    StdoutWrite,
    StderrWrite,
    StdinRead,
    StdinReadLine,
    FileOpen,
    FileWrite,
    FileRead,
    FileReadLine,
    FileFlush,
    FileSize,
    FileSeek,
    LoadModule,
    GetBindingPrototype,
    GetBinding,
    SetAttribute,
    GetAttribute,
    SetPrototype,
    GetPrototype,
    LocalExists,
    RespondsTo,
    SpawnProcess,
    SendProcessMessage,
    ReceiveProcessMessage,
    GetCurrentPid,
    SetParentLocal,
    GetParentLocal,
    FileReadExact,
    StdinReadExact,
    ObjectEquals,
    GetToplevel,
    GetNilPrototype,
    GetNil,
    LookupAttributeChain,
    AttrExists,
    RemoveAttribute,
    GetAttributes,
    GetAttributeNames,
    MonotonicTimeNanoseconds,
    MonotonicTimeMilliseconds,
    RunBlockWithRest,
    GetGlobal,
    SetGlobal,
    SendMessage,
    ArrayPush,
    Throw,
    SetRegister,
}

pub struct Instruction {
    pub instruction_type: InstructionType,
    pub arguments: Vec<usize>,
    pub line: u16,
}

impl Instruction {
    pub fn new(
        ins_type: InstructionType,
        arguments: Vec<usize>,
        line: u16,
    ) -> Instruction {
        Instruction {
            instruction_type: ins_type,
            arguments: arguments,
            line: line,
        }
    }
}
