//! LLVM optimization passes to run for different compiler optimization levels.
//!
//! The pipelines here are based on the output of `opt -passes='default<O2>'
//! -print-pipeline-passes`, with various redundant passes (e.g. those related
//! to OpenMP) removed.
//!
//! For more details, refer to https://github.com/inko-lang/inko/issues/595.
pub(crate) const RELEASE: &str = "\
    inferattrs,\
    function<eager-inv>(\
      lower-expect,\
      simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;no-switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;no-sink-common-insts;speculate-blocks;simplify-cond-branch>,\
      sroa<modify-cfg>,\
      early-cse\
    ),\
    ipsccp,\
    called-value-propagation,\
    globalopt,\
    function<eager-inv>(\
      mem2reg,\
      instcombine<max-iterations=1;no-use-loop-info;no-verify-fixpoint>,\
      simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;no-sink-common-insts;speculate-blocks;simplify-cond-branch>\
    ),\
    always-inline,\
    require<globals-aa>,\
    function(invalidate<aa>),\
    cgscc(\
      inline,\
      function-attrs<skip-non-recursive-function-attrs>,\
      function<eager-inv;no-rerun>(\
        sroa<modify-cfg>,\
        early-cse<memssa>,\
        speculative-execution<only-if-divergent-target>,\
        jump-threading,\
        correlated-propagation,\
        simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;no-sink-common-insts;speculate-blocks;simplify-cond-branch>,\
        instcombine<max-iterations=1;no-use-loop-info;no-verify-fixpoint>,\
        aggressive-instcombine,\
        tailcallelim,\
        simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;no-sink-common-insts;speculate-blocks;simplify-cond-branch>,\
        reassociate,\
        constraint-elimination,\
        loop-mssa(\
          loop-instsimplify,\
          loop-simplifycfg,\
          licm<no-allowspeculation>,\
          loop-rotate<header-duplication;no-prepare-for-lto>,\
          licm<allowspeculation>,\
          simple-loop-unswitch<no-nontrivial;trivial>\
        ),\
        simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;no-sink-common-insts;speculate-blocks;simplify-cond-branch>,\
        instcombine<max-iterations=1;no-use-loop-info;no-verify-fixpoint>,\
        loop(loop-idiom,indvars,loop-deletion,loop-unroll-full),\
        sroa<modify-cfg>,\
        vector-combine,\
        mldst-motion<no-split-footer-bb>,\
        gvn,\
        sccp,\
        bdce,\
        instcombine<max-iterations=1;no-use-loop-info;no-verify-fixpoint>,\
        jump-threading,\
        correlated-propagation,\
        adce,\
        memcpyopt,\
        dse,\
        move-auto-init,\
        loop-mssa(licm<allowspeculation>),\
        simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;hoist-common-insts;sink-common-insts;speculate-blocks;simplify-cond-branch>,\
        instcombine<max-iterations=1;no-use-loop-info;no-verify-fixpoint>\
      ),\
      function-attrs,\
      function(require<should-not-run-function-passes>)\
    ),\
    deadargelim,\
    globalopt,\
    globaldce,\
    elim-avail-extern,\
    rpo-function-attrs,\
    recompute-globalsaa,\
    function<eager-inv>(\
      float2int,\
      lower-constant-intrinsics,\
      loop(loop-rotate<header-duplication;no-prepare-for-lto>,loop-deletion),\
      loop-distribute,\
      inject-tli-mappings,\
      loop-vectorize<no-interleave-forced-only;no-vectorize-forced-only;>,\
      infer-alignment,\
      loop-load-elim,\
      instcombine<max-iterations=1;no-use-loop-info;no-verify-fixpoint>,\
      simplifycfg<bonus-inst-threshold=1;forward-switch-cond;switch-range-to-icmp;switch-to-lookup;no-keep-loops;hoist-common-insts;sink-common-insts;speculate-blocks;simplify-cond-branch>,\
      slp-vectorizer,\
      vector-combine,\
      instcombine<max-iterations=1;no-use-loop-info;no-verify-fixpoint>,\
      loop-unroll<O2>,\
      sroa<preserve-cfg>,\
      infer-alignment,\
      instcombine<max-iterations=1;no-use-loop-info;no-verify-fixpoint>,\
      loop-mssa(licm<allowspeculation>),\
      alignment-from-assumptions,\
      loop-sink,\
      instsimplify,\
      div-rem-pairs,\
      tailcallelim,\
      simplifycfg<bonus-inst-threshold=1;no-forward-switch-cond;switch-range-to-icmp;no-switch-to-lookup;keep-loops;no-hoist-common-insts;no-sink-common-insts;speculate-blocks;simplify-cond-branch>\
    ),\
    globaldce,\
    constmerge,\
    rel-lookup-table-converter,\
    function(annotation-remarks)\
";
